@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{ 
    var myAreaName = string.Empty;
    object areaObj;
    if (ViewContext.RouteData.Values.TryGetValue("area", out areaObj))
    {
        myAreaName = areaObj.ToString();
    }
}
<ul class="navbar-nav login">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (!string.IsNullOrEmpty(myAreaName) && myAreaName == "Admin")
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-page="/Index">Retour sur le site...</a>
            </li>
        }
        <li class="nav-item">
            <span class="icon-manage"></span>
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity.Name</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <span class="icon-login icon-logout"></span>
                <button type="submit" class="nav-link btn btn-link text-dark">Déconnexion</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <span class="icon-register"></span>
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Inscription</a>
        </li>
        <li class="nav-item">
            <span class="icon-login"></span>
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Connexion</a>
        </li>
    }
</ul>
